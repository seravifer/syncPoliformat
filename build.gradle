version '1.0'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

buildscript {
    ext.kotlin_version = '1.2.30'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

sourceCompatibility = 1.8

mainClassName = 'AppKt'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://dl.bintray.com/jetbrains/spek' }
}

dependencies {
    compile 'com.jfoenix:jfoenix:8.0.1'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'pl.droidsonroids:jspoon:1.2.2'
    compile 'com.squareup.moshi:moshi:1.5.0'
    compile ('com.squareup.moshi:moshi-kotlin:1.5.0') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'io.github.microutils:kotlin-logging:1.5.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'org.codehaus.groovy:groovy:2.3.0' // Necesario para calcualar el directorio donde guardar el log

    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-java8:2.3.0'
    compile 'pl.droidsonroids.retrofit2:converter-jspoon:1.2.2'

    testCompile ('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile 'com.nhaarman:mockito-kotlin:1.5.0'

    testRuntime ('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
}

test {
    doFirst {
        jvmArgs += ["-Ddni=${System.properties['dni']}", "-Dclau=${System.properties['clau']}"]
        println System.properties['dni']
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File',
                    'Implementation-Version': version,
                    'Main-Class': mainClassName
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}